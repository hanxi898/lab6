% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brute_force_knapsack_optimized.R
\name{brute_force_knapsack_optimized}
\alias{brute_force_knapsack_optimized}
\title{Brute Force Knapsack Algorithm}
\arguments{
\item{x}{A data frame containing two columns: \code{v} (values) and \code{w} (weights).
Both \code{v} and \code{w} should be positive numeric values.}

\item{W}{A numeric value representing the maximum allowed weight of the knapsack.}

\item{parallel}{A logical value (default is FALSE). If TRUE, the function will parallelize
the computation across available cores to speed up the process.}
}
\value{
A list containing two elements:
\item{value}{The total value of the selected items.}
\item{elements}{A vector of indices representing the selected items.}
}
\description{
This function solves the knapsack problem using a brute force approach.
It iterates over all possible combinations of items and selects the one
with the highest total value without exceeding the specified weight limit.
}
\examples{
# Example usage with a small dataset
knapsack_objects <- data.frame(
  w = sample(1:100, 10, replace = TRUE),
  v = runif(10, min = 1, max = 100)
)
result <- brute_force_knapsack(knapsack_objects, W = 500, parallel = TRUE)
print(result)
}
